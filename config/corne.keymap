/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
    time-to-max-speed-ms = <500>;
};
&mwh {
    acceleration-exponent=<2>;
};
 
/ {
        combos {
        compatible = "zmk,combos";
        combo_bt_clr {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&bt BT_CLR>;
            layers = <1>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &lt 3 Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &lt 3 O   &kp P    &kp BSPC
   &kp LCTRL &lt 1 A &kp S &kp D &kp F &lt 2 G   &kp H &kp J  &kp K     &kp L   &lt 1 SEMI &kp SQT
   &sk LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &to 1 &kp RET   &kp SPACE &to 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |@q     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N0   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp N0 &kp N4 &kp N5 &kp N6 &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &kp N1   &kp N2 &kp N3    &trans &trans
                                    &kp LGUI     &to 0       &trans      &trans  &to 0   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  | BKSP |
// | CTRL |     |     |     |     |     |   |  _  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  -  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp UP_ARROW &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp LPAR &kp RPAR &kp ASTERISK &kp BSPC
   &kp LCTRL &kp TILDE &kp LEFT_ARROW  &kp DOWN_ARROW &kp RIGHT_ARROW   &trans      &kp UNDER &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans    &trans   &trans   &trans      &kp MINUS &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &trans 
                             &kp LGUI &to 0   &trans   &trans   &to 0    &kp RALT
                        >;
                };

                more_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  | BKSP |
// | CTRL |     |     |     |     |     |   |  _  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  -  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none  &none &none &mmv MOVE_UP &none &none    &none &mwh SCROLL_UP &none &kp RPAR &kp ASTERISK &kp BSPC
   &none &none &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT   &trans      &kp UNDER &mkp LCLK &mkp RCLK        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans    &trans   &trans   &trans      &kp MINUS &mwh SCROLL_DOWN  &kp LBRC        &kp RBRC &kp PIPE &trans 
                             &kp LGUI &trans   &trans   &trans   &trans    &kp RALT
                        >;
                };
        };
};
// TODO:
// 1. combo for the blt-clear key to prevent from wrong press.      @ done
// 2. find a place for page up,down, end, home. maybe one more layer.
// 3. find a place for del, and better symbols location.(maybe)
// 4. coming soon, crete a layer of macros for the markdown language, maybe one for python.(def, class, return...)
// 5. shift to the mouse layer instead of momentary as it's hard to keep it pressed.